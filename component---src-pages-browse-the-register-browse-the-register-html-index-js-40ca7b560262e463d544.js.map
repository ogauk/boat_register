{"version":3,"sources":["webpack:///./src/pages/browse_the_register/browse_the_register.html/index.js"],"names":["defaultState","page","boatsPerPage","sortField","sortDirection","filters","sale","client","ApolloClient","link","createHttpLink","uri","cache","InMemoryCache","BrowseTheRegisterPage","location","state","search","params","URLSearchParams","key","value","parseInt","year","firstYear","lastYear","split","title"],"mappings":"6FAAA,oIAOA,MAAMA,EAAe,CACnBC,KAAM,EACNC,aAAc,KACdC,UAAW,iBACXC,cAAe,MACfC,QAAS,CAAEC,MAAM,IAGbC,EAAS,IAAIC,IAAa,CAC5BC,KAAMC,YAAe,CACnBC,IAAK,6CAEPC,MAAO,IAAIC,MAGA,SAASC,GAAsB,SAAEC,IAC9C,MAAMC,EAAQ,IAAIhB,GAClB,GAAwB,KAApBe,EAASE,OAAe,CAC1B,MAAMC,EAAS,IAAIC,gBAAgBJ,EAASE,QAC5C,IAAK,MAAOG,EAAKC,KAAUH,EACzB,OAAQE,GACN,IAAK,IACHJ,EAAMf,KAAOqB,SAASD,EAAO,IAC7B,MACF,IAAK,MACHL,EAAMd,aAAemB,EACrB,MACF,IAAK,OACHL,EAAMb,UAAYkB,EAClB,MACF,IAAK,MACHL,EAAMZ,cAAwB,SAARiB,EAAiB,MAAQ,OAC/C,MACF,IAAK,IACH,MAAME,EAAO,IACNC,EAAWC,GAAYJ,EAAMK,MAAM,KACxB,KAAdF,IACFD,EAAKC,UAAYA,GAEF,KAAbC,IACFF,EAAKE,SAAWA,GAElBT,EAAMX,QAAQkB,KAAOA,EACrB,MACF,QACEP,EAAMX,QAAQe,GAAOC,GAM7B,OACE,kBAAC,iBAAD,CAAgBd,OAAQA,GACtB,kBAAC,IAAD,CAAgBoB,MAAM,sBAAsB3B,aAAcgB,IAD5D","file":"component---src-pages-browse-the-register-browse-the-register-html-index-js-40ca7b560262e463d544.js","sourcesContent":["import React from \"react\"\nimport ApolloClient from \"apollo-client\"; // N.B. only needed for the enquiry mutation\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { createHttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport GqlBoatBrowser from '../../../components/GqlBoatBrowser';\n\nconst defaultState = {\n  page: 1,\n  boatsPerPage: '12', \n  sortField: 'editors_choice', \n  sortDirection: 'asc',\n  filters: { sale: false }, \n};\n\nconst client = new ApolloClient({\n    link: createHttpLink({\n      uri: \"https://api-oga.herokuapp.com/v1/graphql\",\n    }),\n    cache: new InMemoryCache()\n});\n\nexport default function BrowseTheRegisterPage({ location }) {\n  const state = {...defaultState};\n  if (location.search !== '') {\n    const params = new URLSearchParams(location.search);\n    for (const [key, value] of params) {\n      switch (key) {\n        case 'p':\n          state.page = parseInt(value, 10);\n          break;\n        case 'bpp':\n          state.boatsPerPage = value;\n          break;\n        case 'sort':\n          state.sortField = value;\n          break;\n        case 'asc':\n          state.sortDirection = value==='true' ? 'asc' : 'desc';\n          break;\n        case 'y':\n          const year = {};\n          const [firstYear, lastYear] = value.split('-');\n          if (firstYear !== '') {\n            year.firstYear = firstYear;\n          }\n          if (lastYear !== '') {\n            year.lastYear = lastYear;\n          }\n          state.filters.year = year;\n          break;\n        default:\n          state.filters[key] = value;\n      }\n    }\n    // window.location.search = '';  \n  }\n\n  return (\n    <ApolloProvider client={client}>\n      <GqlBoatBrowser title=\"Browse the Register\" defaultState={state}/>;\n    </ApolloProvider>\n  );\n}"],"sourceRoot":""}